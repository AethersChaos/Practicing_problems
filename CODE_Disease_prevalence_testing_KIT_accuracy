import numpy as np
import matplotlib.pyplot as plt

# Function to calculate the probability of having the disease given a positive test result
def calculate_probability_positive_test(prob_disease, test_accuracy):
    prob_positive_given_disease = test_accuracy
    prob_positive_given_no_disease = 1 - test_accuracy
    prob_no_disease = 1 - prob_disease
    
    # Applying Bayes' Theorem
    prob_disease_given_positive = (prob_positive_given_disease * prob_disease) / \
                                   (prob_positive_given_disease * prob_disease + 
                                    prob_positive_given_no_disease * prob_no_disease)
    return prob_disease_given_positive

# Probabilities of having the disease ranging from 0 to 1
probabilities_disease = np.linspace(0, 1, 100)

# Test kit accuracies ranging from 0 to 1
test_accuracies = np.linspace(0, 1, 100)

# Create a 2D array to store the probabilities for each combination of disease probability and test accuracy
probabilities_positive_test = np.zeros((len(probabilities_disease), len(test_accuracies)))

# Calculate the probabilities for each combination
for i, prob_disease in enumerate(probabilities_disease):
    for j, test_accuracy in enumerate(test_accuracies):
        probability = calculate_probability_positive_test(prob_disease, test_accuracy)
        probabilities_positive_test[i, j] = probability

# Plotting graph1
plt.imshow(probabilities_positive_test, extent=[0, 1, 0, 1], origin='lower', aspect='auto', cmap='viridis')

# Plotting the segments
plt.axvline(x=0.6, color='white', linestyle='--')  # Low accuracy threshold
plt.axvline(x=0.7, color='white', linestyle='--')  # Medium accuracy threshold
plt.axvline(x=0.85, color='white', linestyle='--')  # High accuracy threshold
plt.axvline(x=0.95, color='white', linestyle='--')  # Very high accuracy threshold

plt.axhline(y=0.01, color='white', linestyle='--')  # Very rare disease threshold
plt.axhline(y=0.1, color='white', linestyle='--')  # Rare disease threshold
plt.axhline(y=0.3, color='white', linestyle='--')  # Fairly rare disease threshold
plt.axhline(y=0.5, color='white', linestyle='--')  # Prevalent disease threshold

# Adding data points for accuracy and disease prevalence from medical tests
medical_tests = [
    ("Pregnancy Test", 0.99, 0.85),
    ("Blood Glucose Test", 0.95, 0.7),
    ("Cholesterol Test", 0.97, 0.9),
    ("Strep Throat Test", 0.98, 0.3),
    ("HIV Test", 0.95, 0.02),
    ("Colonoscopy", 0.95, 0.2),
    ("Mammography", 0.9, 0.5),
    ("PSA Test", 0.8, 0.05),
    ("Pap Smear", 0.85, 0.03),
    ("Thyroid Function Tests", 0.97, 0.4)
]

# Separate data
test_names, accuracies, prevalences = zip(*medical_tests)

# Adding data points for accuracy and disease prevalence
for name, acc, prev in zip(test_names, accuracies, prevalences):
    size = 30 + (acc - 0.85) * 200  # Adjust size based on accuracy
    plt.scatter(acc, prev, color='red', s=size, marker='o')
    # Add name of disease on each label
    plt.text(acc, prev, name, fontsize=8, ha='right', va='bottom')

plt.title('Effect of Test Kit Accuracy and Disease Prevalence on Disease Detection')
plt.xlabel('Test Kit Accuracy')
plt.ylabel('Disease Prevalence')
plt.grid(True)
plt.colorbar(label='Probability of Having Disease Given Positive Test')
plt.show()
